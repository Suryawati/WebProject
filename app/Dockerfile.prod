###########
# BUILDER #
###########

# pull official base image
FROM python:3.11.4-slim-buster as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends gcc && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# upgrade pip and install flake8
RUN pip install --upgrade pip && \
    pip install flake8==6.0.0

# copy the application files
COPY . .

# lint the code and print potential errors
RUN flake8 --ignore=E501,F401 . || true

# install python dependencies and create wheels
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

#########
# FINAL #
#########

# pull official base image
FROM python:3.11.4-slim-buster

# create directory for the app user
RUN mkdir -p /home/app/web

# create the app user and group
RUN groupadd -r app && useradd -r -g app -d /home/app -s /sbin/nologin -c "Docker image user" app

# set environment variables
ENV HOME=/home/app
ENV APP_HOME=/home/app/web

# set working directory
WORKDIR $APP_HOME

# install system dependencies and clean up
RUN apt-get update && \
    apt-get install -y --no-install-recommends netcat && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# copy the wheels and requirements
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .

# install python dependencies
RUN pip install --upgrade pip && \
    pip install --no-cache /wheels/*

# copy entrypoint and make it executable
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g' entrypoint.prod.sh && \
    chmod +x entrypoint.prod.sh

# copy the application files
COPY . .

# set permissions
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

# run entrypoint
ENTRYPOINT ["./entrypoint.prod.sh"]
